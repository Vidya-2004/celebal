CREATE TABLE StudentDetails (
    StudentId INT PRIMARY KEY,
    StudentName VARCHAR(100),
    GPA DECIMAL(3, 1),
    Branch VARCHAR(10),
    Section CHAR(1)
);

CREATE TABLE SubjectDetails (
    SubjectId VARCHAR(10) PRIMARY KEY,
    SubjectName VARCHAR(100),
    MaxSeats INT,
    RemainingSeats INT
);

CREATE TABLE StudentPreference (
    StudentId INT,
    SubjectId VARCHAR(10),
    Preference INT,
    FOREIGN KEY (StudentId) REFERENCES StudentDetails(StudentId),
    FOREIGN KEY (SubjectId) REFERENCES SubjectDetails(SubjectId)
);

CREATE TABLE Allotments (
    SubjectId VARCHAR(10),
    StudentId INT,
    FOREIGN KEY (StudentId) REFERENCES StudentDetails(StudentId),
    FOREIGN KEY (SubjectId) REFERENCES SubjectDetails(SubjectId)
);

CREATE TABLE UnallotedStudents (
    StudentId INT,
    FOREIGN KEY (StudentId) REFERENCES StudentDetails(StudentId)
);

-- Step 2: Insert data into the tables

INSERT INTO StudentDetails (StudentId, StudentName, GPA, Branch, Section)
VALUES 
(159103036, 'Mohit Agarwal', 8.9, 'CCE', 'A'),
(159103037, 'Rohit Agarwal', 5.2, 'CCE', 'A'),
(159103038, 'Shobit Garg', 7.1, 'CCE', 'B'),
(159103039, 'Mrinal Malhotra', 7.9, 'CCE', 'A'),
(159103040, 'Mehreet Singh', 5.6, 'CCE', 'A'),
(159103041, 'Arjun Tehlan', 9.2, 'CCE', 'B');

INSERT INTO SubjectDetails (SubjectId, SubjectName, MaxSeats, RemainingSeats)
VALUES 
('PO1491', 'Basics of Political Science', 60, 2),
('PO1492', 'Basics of Accounting', 120, 119),
('PO1493', 'Basics of Financial Markets', 90, 90),
('PO1494', 'Eco philosophy', 60, 50),
('PO1495', 'Automotive Trends', 60, 60);

INSERT INTO StudentPreference (StudentId, SubjectId, Preference)
VALUES 
(159103036, 'PO1491', 1),
(159103036, 'PO1492', 2),
(159103036, 'PO1493', 3),
(159103036, 'PO1494', 4),
(159103036, 'PO1495', 5);

-- Step 3: Write the stored procedure for allocation

DELIMITER //

CREATE PROCEDURE AllocateSubjects()
BEGIN
    DECLARE done INT DEFAULT 0;
    DECLARE student_id INT;
    DECLARE gpa DECIMAL(3, 1);
    DECLARE cur CURSOR FOR
        SELECT StudentId, GPA FROM StudentDetails ORDER BY GPA DESC;
    DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = 1;

    OPEN cur;

    read_loop: LOOP
        FETCH cur INTO student_id, gpa;
        IF done THEN
            LEAVE read_loop;
        END IF;

        DECLARE pref INT DEFAULT 1;
        DECLARE subj_id VARCHAR(10);
        DECLARE seats INT;

        pref_loop: LOOP
            IF pref > 5 THEN
                -- All preferences checked, mark as unallotted
                INSERT INTO UnallotedStudents (StudentId) VALUES (student_id);
                LEAVE pref_loop;
            END IF;

            SELECT SubjectId 
            INTO subj_id 
            FROM StudentPreference 
            WHERE StudentId = student_id AND Preference = pref;

            SELECT RemainingSeats 
            INTO seats 
            FROM SubjectDetails 
            WHERE SubjectId = subj_id;

            IF seats > 0 THEN
                -- Allocate the subject
                INSERT INTO Allotments (SubjectId, StudentId) VALUES (subj_id, student_id);
                -- Update remaining seats
                UPDATE SubjectDetails 
                SET RemainingSeats = RemainingSeats - 1 
                WHERE SubjectId = subj_id;
                LEAVE pref_loop;
            END IF;

            SET pref = pref + 1;
        END LOOP pref_loop;
    END LOOP read_loop;

    CLOSE cur;
END //

DELIMITER ;

-- Step 4: Execute the stored procedure

CALL AllocateSubjects();
